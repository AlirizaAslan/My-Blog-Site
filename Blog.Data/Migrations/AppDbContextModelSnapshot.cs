// <auto-generated />
using System;
using Blog.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0c349aa-9f4d-49cd-ace0-7a44fd94c904"),
                            CategoryId = new Guid("d2b8f597-96f8-418b-9819-96c150cad909"),
                            Content = "asp. net açıklama",
                            CreatedBy = "admin test",
                            CreatedDate = new DateTime(2023, 3, 20, 16, 4, 18, 407, DateTimeKind.Local).AddTicks(5508),
                            DeletedBy = "False",
                            ImageId = new Guid("d5a78a10-21a8-49a3-a3b6-e21add292023"),
                            IsDeleted = false,
                            ModifiedBy = "admin",
                            Title = "Asp.net core deneme makalesi 1",
                            ViewCount = 15
                        },
                        new
                        {
                            Id = new Guid("a166a5bd-1790-431f-b449-b5694c6ccad6"),
                            CategoryId = new Guid("3c5c732f-92e5-4707-b26e-e3482a60540f"),
                            Content = "vs açıklama",
                            CreatedBy = "admin test",
                            CreatedDate = new DateTime(2023, 3, 20, 16, 4, 18, 407, DateTimeKind.Local).AddTicks(5512),
                            DeletedBy = "admin",
                            ImageId = new Guid("9c6a7406-5073-45c5-b2de-a56773c220b4"),
                            IsDeleted = false,
                            ModifiedBy = "False",
                            Title = "vs deneme makalesi 1",
                            ViewCount = 1
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2b8f597-96f8-418b-9819-96c150cad909"),
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2023, 3, 20, 16, 4, 18, 407, DateTimeKind.Local).AddTicks(5708),
                            DeletedBy = "false",
                            IsDeleted = false,
                            ModifiedBy = "admin",
                            Name = "asp .net core mvc"
                        },
                        new
                        {
                            Id = new Guid("3c5c732f-92e5-4707-b26e-e3482a60540f"),
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2023, 3, 20, 16, 4, 18, 407, DateTimeKind.Local).AddTicks(5711),
                            DeletedBy = "false",
                            IsDeleted = false,
                            ModifiedBy = "admin",
                            Name = "vs 2022"
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ımages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5a78a10-21a8-49a3-a3b6-e21add292023"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 20, 16, 4, 18, 407, DateTimeKind.Local).AddTicks(5813),
                            DeletedBy = "false",
                            FileName = "images/testimage",
                            FileType = "jpg",
                            IsDeleted = false,
                            ModifiedBy = "admin"
                        },
                        new
                        {
                            Id = new Guid("9c6a7406-5073-45c5-b2de-a56773c220b4"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 20, 16, 4, 18, 407, DateTimeKind.Local).AddTicks(5816),
                            DeletedBy = "false",
                            FileName = "images/testimage",
                            FileType = "jpg",
                            IsDeleted = false,
                            ModifiedBy = "admin"
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.HasOne("Blog.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
